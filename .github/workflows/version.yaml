name: Version

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  version:
    name: Update Version
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[version ci]')"
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Get last version
        run: |
          git fetch --tags
          echo "LAST_VERSION=$( git tag --list v*.*.* --sort taggerdate | tail -n 1 )" >> $GITHUB_ENV
      - name: Update version
        run: |
          CHANGED_ASSETS=$(git diff --name-only ${{ env.LAST_VERSION }} -- assets/ settings/)
          CHANGED_CODE=$(git diff --name-only ${{ env.LAST_VERSION }} -- src/ Cargo.*)
          if [[ $CHANGED_ASSETS || $CHANGED_CODE ]]; then
            echo "changes made, updating version"

            if [[ ${{ env.LAST_VERSION }} =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+).*$ ]]; then
              CODE_VERSION_MAJOR=${BASH_REMATCH[1]}
              CODE_VERSION_MINOR=${BASH_REMATCH[2]}
              CODE_VERSION_PATCH=${BASH_REMATCH[3]}

              UPDATE_CARGO=false
              MAJOR_COMMITS=$(git log ${{ env.LAST_VERSION }}..HEAD --grep '^\w+!:')
              MINOR_COMMITS=$(git log ${{ env.LAST_VERSION }}..HEAD --grep '^feat:')
              if [[ $MAJOR_COMMITS || $MINOR_COMMITS ]]; then
                echo "incrementing code version (minor)"
                CODE_VERSION_MINOR=$(( $CODE_VERSION_MINOR + 1 ))
                CODE_VERSION_PATCH=0
                UPDATE_CARGO=true
              elif [[ $CHANGED_CODE ]]; then
                echo "incrementing code version (patch)"
                CODE_VERSION_PATCH=$(( $CODE_VERSION_PATCH + 1 ))
                UPDATE_CARGO=true
              fi
              CODE_VERSION="$CODE_VERSION_MAJOR.$CODE_VERSION_MINOR.$CODE_VERSION_PATCH"

              git config user.name 'github-actions[bot]'
              git config user.email 'github-actions[bot]@users.noreply.github.com'
              if $UPDATE_CARGO; then
                echo "updating cargo"
                sed "s/^version = \".*\"$/version = \"$CODE_VERSION\"/" Cargo.toml -i
                git add Cargo.toml
                git commit -m "build: increment version to $CODE_VERSION [version ci]"
              fi

              DATE_VERSION=$(date +%y.%m.%d)
              VERSION="v$CODE_VERSION-$DATE_VERSION"
              COLLISION=0
              while [[ $(git tag | grep $VERSION) ]]; do
                COLLISION=$(( $COLLISION + 1 ))
                VERSION="v$CODE_VERSION-$DATE_VERSION-$COLLISION"
              done

              echo "new version: $VERSION"
              echo "NEW_VERSION=$VERSION" >> $GITHUB_ENV
            fi
          else
            echo "no changes detected, skipping.."
          fi
      - name: Push tag
        if: ${{ env.NEW_VERSION }}
        run: |
          git log ${{ env.LAST_VERSION }}..HEAD --pretty=format:%s%n > release-body.md
          git tag -a ${{ env.NEW_VERSION }} -m "version updated to ${{ env.NEW_VERSION }} by CI"
          git push --follow-tags
      - name: Describe release
        if: ${{ env.NEW_VERSION }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.NEW_VERSION }}
          bodyFile: release-body.md
